// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Mux(a=false, b=true, sel=load, out=muxout); //pass 1 into DMux8 if load, else 0
    DMux8Way(in=muxout, sel=address, a=rb0, b=rb1, c=rb2, d=rb3, e=rb4, f=rb5, g=rb6, h=rb7); //pass 1 or 0 to load pin of speciied address
    Register(in=in, load=rb0, out=r0); //define register 0 through 7 
    Register(in=in, load=rb1, out=r1);
    Register(in=in, load=rb2, out=r2);
    Register(in=in, load=rb3, out=r3);
    Register(in=in, load=rb4, out=r4);
    Register(in=in, load=rb5, out=r5);
    Register(in=in, load=rb6, out=r6);
    Register(in=in, load=rb7, out=r7);
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address, out=out); //return state of addressed register 

}